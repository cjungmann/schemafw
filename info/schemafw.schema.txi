@node Schema
@chapter Schema

The namesake @emph{schema} of the Schema Framework, is an XML fragment
whose foundation is a set of data descriptions derived from either the
result of a query or the parameters of a stored procedure.

Unmodified field descriptions include the field's name and data type,
a @emph{sort} attribute if the field is a number, and other attributes
that correspond to field settings in the CREATE TABLE statement
like @emph{auto-increment}, @emph{primary-key}, and @emph{not-null}.

The schema is used by the built-in code of the Framework to render
tables and forms.

@heading Schema Generation

While the schema is useful for rendering pages, it also carries a
cost.  It takes extra processing on the server to generate the schema
and it increases the size of the transmitted XML document.  The
Framework attempts to balance the cost and benefit by automatically
including a schema only when the display type is a table, or if it
can detect data that is meant to populate a form.

A schema will also be generated by including a @code{schema} or
@code{schema-proc} instruction in cases where the developer needs the
schema and it wouldn't be generated by default.

@heading Schema Customization

The schema, along with the query result fragments that might contain
a schema, can include many other instructions that influence how a
page or page fragment will be rendered.  There are many pre-defined
result and schema instructions that have specific outcomes, and the
developer is free to add any free-form instructions that serve custom
interactions.


