@node ISOTable Widget
@section ISOTable Widget

This is an isolated table widget.  The user uses this widget to manage a
set of items that are related to the parent item.  An example of this is
a household and its members.  Using an @emph{isotable}, the household
members would be managed as a group, with any changes to the members,
including additions and deletions, would be held on the client and
submitted to the Schema Server as a package.

There is currently no formal documentation on the use of this widget.
For now, you are directed to study the example found in the github
project @url{https://github.com/cjungmann/sfw_household.git}.

@menu
* ISOTable External Example::
* ISOTable SQL with gensfw_isotable_procs::
* ISOTable Hints::
@end menu

@node ISOTable External Example
@subsection ISOTable External Example

The best way to learn about the @emph{isotable}, at least for now,
is to look at an example.  The following instructions will
explain how to install the @emph{sfw_household} project to see
an example.

Navigate your workstation to an appropriate directory and
download the @emph{sfw_household} project into a new directory
with the following command:

@example
git clone https://gitbug.com/cjungmann/sfw_household.git
@end example

The file, @file{custom/Person_ISOTable.sql} was generated by
@code{gensfw_isotable_procs}, and its contents are called by
@file{custom/HouseholdType2.sql}, which, in turn, is called by
@file{custom/HouseholdType2.srm}.

@node ISOTable SQL with gensfw_isotable_procs
@subsection ISOTable SQL with gensfw_isotable_procs

The most complicated and tedious coding chore associated with
@emph{isotable} setup is writing the MySQL code that parses the
single string encoding the isotable's contents.  The MySQL code
must parse the string into lines, and each line into fields.

There is a utility that will generate two procedures that will
help the developer decipher the posted @emph{isotable} data.
Part of the @emph{gensfw} project, @code{gensfw_isotable_procs}
@inforef{gensfw_isotable_procs,,gensfw} is a simple code generator
that automates the tedious task of parsing the @emph{isotable}
data.

@node ISOTable Hints
@subsection ISOTable Hints

In lieu of format documentation, the following table introduces
@emph{isotable} requirements and where to find their solutions in
the github example.

@table @strong
@item Parsing ISOTable Contents
Investigate @file{custom/Person_ISOTable.sql}, procedure
@code{App_Person_isoTable_Fill_Temp_Table} for ideas on how to parse
an @emph{isotable} field.

@item Declare field as @emph{isotable}
Response modes @emph{add} and @emph{edit} in SRM file
@file{custom/HouseholdType2.srm}  both use an @emph{isotable} field.

@item Non-submitting @emph{isotable} member form
Since the forms associated with managing the isotable work locally
on the client, the forms must be prevented from submitting the data.
At the writing of this document, the framework recognizes the
@emph{form-action} URL setting of @code{^local} as a non-submitting form.
Look at shared mode @emph{member_schema} in the SRM file
@file{custom/HouseholdType2.srm} for an example.

@end table
